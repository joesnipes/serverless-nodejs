# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: serverless-nodejs
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: us-east-1
  environment:
    VULN_TABLE: ${self:service}-${opt:stage, self:provider.stage}

# you can add statements to the Lambda function's IAM Role here
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
          Resource: "*"


# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**
	
functions:
  serverless-nodejs-submit:
    handler: api/vuln.submit
    memorySize: 128
    description: Submit vuln details to dynamo table.
    events:
      - http: 
          path: vuln
          method: post
  serverless-nodejs-list:
    handler: api/vuln.list
    memorySize: 128
    description: List All vulns.
    events:
      - http: 
          path: vuln
          method: get

resources:
  Resources:
    vulnDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Snapshot
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.VULN_TABLE}

#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
